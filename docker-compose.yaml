name: boilerplate
version: '3.9'


services:
  app:
    container_name: boilerplate_app
    image: boilerplate_app:latest
    build:
      context: .
      dockerfile: Dockerfile.local
    command: >
      bash -c "python manage.py migrate
      && gunicorn --workers=3 --timeout=600 --bind=0.0.0.0:8000 config.wsgi:application"
    depends_on:
      - postgres
      - redis
    env_file:
      - .compose/config.env
    networks:
      - apprx
    ports:
      - "8000:8000"
    restart: always

  celery:
    container_name: apprx_celery
    image: apprx:latest
    build:
      context: .
      dockerfile: Dockerfile.local
    command: bash -c "celery -A config.celery worker -l INFO"
    depends_on:
      - postgres
      - redis
      - minio
    env_file:
      - .compose/config.env
    networks:
      - apprx
    restart: always

  redis:
    container_name: apprx_redis
    image: redis:7.2
    command: [ "redis-server", "--requirepass", "redis_password" ]
    networks:
      - apprx
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis-data:/data



  postgres:
    container_name: apprx_postgres
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: apprx
    networks:
      - apprx
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data

  minio:
    container_name: apprx_minio
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
      MINIO_STORAGE_ACCESS_KEY: "minioadmin"
      MINIO_STORAGE_SECRET_KEY: "minioadmin"
    networks:
      - apprx
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: always
    volumes:
      - minio-data:/data
    command: server /data  --address "0.0.0.0:9000" --console-address "0.0.0.0:9001"

#    nginx:
#        container_name: nginx
#        image: nginx:1.25.4
#        depends_on:
#            - app
#        command: nginx -g 'daemon off;'
#        ports:
#          - "80:80"
#        volumes:
#          - ./nginx.conf:/etc/nginx/nginx.conf
#        networks:
#          - apprx
#        restart: always

networks:
  apprx:

volumes:
  postgres-data:
  minio-data:
  redis-data: